name: Preview build and deploy - AWS CDK | Next.js

on:
  push:
    branches-ignore: [main]

jobs:
  cdk:
    runs-on: ubuntu-latest
    environment: preview
    outputs:
      AWS_ACCESS_KEY_ID: ${{ steps.set-outputs.AWS_ACCESS_KEY_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}

      - name: CDK deploy
        run: |
          pnpm run deploy:prev --filter=cdk

      - name: Get secrets from AWS Secrets Manager
        id: secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: znap-url-secret
          parse-json-secrets: true

      - name: Set outputs
        run: |
          ACCESS_KEY_ID=$(echo "${{ steps.secrets.outputs.secrets }}" | jq -r '.ZNAP_URL_SECRET_AWS_ACCESS_KEY_ID')
          SECRET_ACCESS_KEY=$(echo "${{ steps.secrets.outputs.secrets }}" | jq -r '.ZNAP_URL_SECRET_AWS_SECRET_ACCESS_KEY')
          echo "AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID" >> $GITHUB_OUTPUT
          echo "AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY" >> $GITHUB_OUTPUT

  nextjs:
    runs-on: ubuntu-latest
    environment: preview
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    needs: cdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull vercel environment inforamation
        run: vercel pull --yes --environment=preview --token=${{secrets.VERCEL_TOKEN}}

      - name: Build project artifacts
        run: pnpm run build --filter=web --token=${{secrets.VERCEL_TOKEN}}

      - name: Deploy project artifacts
        run: vercel deploy --prebuilt --token=${{secrets.VERCEL_TOKEN}}
